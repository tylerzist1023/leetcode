{"id":697087140,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1652227010,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/697087140/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isAncestor(TreeNode* a, int v)\n    {\n        if(!a)\n            return false;\n        else if(a->val == v)\n            return true;\n        \n        if(v < a->val)\n            return isAncestor(a->left, v);\n        else if(v > a->val)\n            return isAncestor(a->right, v);\n    }\n    \n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if(!root)\n            return root;\n        \n        TreeNode* lca = root;\n        if(lca->isAncestor(lca->left, p->val) && lca->isAncestor(lca->left, q->val))\n        {\n            lca = lowestCommonAncestor(root->left, p, q);\n        }\n        if(lca->isAncestor(lca->right, p->val) && lca->isAncestor(lca->right, q->val))\n        {\n            lca = lowestCommonAncestor(root->right, p, q);\n        }\n        \n        return lca;\n    }\n};","compare_result":null,"title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}