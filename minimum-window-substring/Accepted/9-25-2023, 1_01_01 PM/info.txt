{"id":1058997324,"lang":"python","lang_name":"Python","time":"3Â months","timestamp":1695664861,"status":10,"status_display":"Accepted","runtime":"142 ms","url":"/submissions/detail/1058997324/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"13.9 MB","code":"class Solution(object):\n    def minWindow(self, s, t):\n        \"\"\"\n        :type s: str\n        :type t: str\n        :rtype: str\n        \"\"\"\n        left,right = 0,0\n        min_left,min_window=-1,len(s)\n\n        requirements = {}\n        for c in t:\n            if not requirements.has_key(c):\n                requirements[c] = 1\n            else:\n                requirements[c] += 1\n\n        while left<len(s) and not requirements.has_key(s[left]):\n            left += 1\n            right += 1\n\n        while left<len(s) and right<len(s):\n            if requirements.has_key(s[right]):\n                requirements[s[right]] -= 1\n                while left <= right and requirements.has_key(s[left]) and requirements[s[left]] < 0:\n                    requirements[s[left]] += 1\n                    left += 1\n                while left <= right:\n                    if requirements.has_key(s[left]) and requirements[s[left]] < 0:\n                        requirements[s[left]] += 1\n                        left += 1\n                    elif not requirements.has_key(s[left]):\n                        left += 1\n                    else:\n                        break\n                \n                requirements_satisfied = True\n                for r in requirements:\n                    if requirements[r] > 0:\n                        requirements_satisfied = False\n                        break\n                if requirements_satisfied:\n                    window = right - left + 1\n                    if window <= min_window:\n                        min_window = window\n                        min_left = left\n                    requirements[s[left]] += 1\n                    left += 1\n                    while left <= right and requirements.has_key(s[left]) and requirements[s[left]] < 0:\n                            requirements[s[left]] += 1\n                            left += 1\n                    while left <= right:\n                        if requirements.has_key(s[left]) and requirements[s[left]] < 0:\n                            requirements[s[left]] += 1\n                            left += 1\n                        elif not requirements.has_key(s[left]):\n                            left += 1\n                        else:\n                            break\n\n            right += 1\n        if min_left == -1:\n            return \"\"\n        return s[min_left:min_left+min_window]\n\n                \n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}