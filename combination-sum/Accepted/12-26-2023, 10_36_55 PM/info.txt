{"id":1129376163,"lang":"python3","lang_name":"Python3","time":"4 days, 6 hours","timestamp":1703651815,"status":10,"status_display":"Accepted","runtime":"63 ms","url":"/submissions/detail/1129376163/","is_pending":"Not Pending","title":"Combination Sum","memory":"17.4 MB","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n        res = []\n\n        def dfs(i, cur, total):\n            if total == target:\n                res.append(cur.copy())\n                return\n            if i >= len(candidates) or total > target:\n                return\n\n            cur.append(candidates[i])\n            dfs(i, cur, total+candidates[i])\n\n            cur.pop()\n            dfs(i+1, cur, total)\n\n        dfs(0,[],0)\n        return res","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}