{"id":1129372980,"lang":"python3","lang_name":"Python3","time":"4 days, 6 hours","timestamp":1703651479,"status":10,"status_display":"Accepted","runtime":"4087 ms","url":"/submissions/detail/1129372980/","is_pending":"Not Pending","title":"Combination Sum","memory":"17.5 MB","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n        res = []\n\n        def dfs(nums):\n            if sorted(nums) in res:\n                return\n            if sum(nums) == target:\n                res.append(sorted(nums.copy()))\n                return\n            if sum(nums) > target:\n                return\n\n            for candidate in candidates:\n                nums_copy = nums.copy()\n                nums_copy.append(candidate)\n                dfs(nums_copy)\n\n        dfs([])\n        return res","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}