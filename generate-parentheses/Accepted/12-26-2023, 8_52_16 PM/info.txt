{"id":1129320582,"lang":"python","lang_name":"Python","time":"4 days, 8 hours","timestamp":1703645536,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1129320582/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"13.8 MB","code":"class Solution(object):\n    def generateParenthesis(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: List[str]\n        \"\"\"\n        stack = []\n        res = []\n\n        def backtrack(open, closed):\n            if open == closed == n:\n                res.append(\"\".join(stack))\n            if open < n:\n                stack.append(\"(\")\n                backtrack(open+1,closed)\n                stack.pop()\n            if closed < open:\n                stack.append(\")\")\n                backtrack(open,closed+1)\n                stack.pop()\n\n        backtrack(0,0)\n        return res\n","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false,"flag_type":1}