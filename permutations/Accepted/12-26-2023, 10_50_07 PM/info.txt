{"id":1129384360,"lang":"python3","lang_name":"Python3","time":"4Â days, 6Â hours","timestamp":1703652607,"status":10,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/1129384360/","is_pending":"Not Pending","title":"Permutations","memory":"17.4 MB","code":"class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        result  = []\n\n        if len(nums) == 1:\n            return [nums.copy()]\n\n        for i in range(len(nums)):\n            n = nums.pop(0)\n\n            perms = self.permute(nums)\n\n            for perm in perms:\n                perm.append(n)\n\n            result.extend(perms)\n            nums.append(n)\n        \n        return result\n","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false,"flag_type":1}