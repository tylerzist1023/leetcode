{"id":1127792500,"lang":"python","lang_name":"Python","time":"6 days, 9 hours","timestamp":1703470377,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/1127792500/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"20.4 MB","code":"# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nfrom fractions import gcd\n\nclass Solution(object):\n    def hasCycle(self, head):\n        \"\"\"\n        :type head: ListNode\n        :rtype: bool\n        \"\"\"\n        \n        tortoise = head\n        tortoise_i = 0\n        hare = head\n        hare_i = 0\n\n        while tortoise or hare:\n            tortoise = tortoise.next\n            tortoise_i += 1\n            if hare and hare.next:\n                hare = hare.next.next\n                hare_i += 2\n            else:\n                return False\n\n            if hare == tortoise:\n                return True\n\n        \n","compare_result":"11111111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}