{"id":1055476390,"lang":"python","lang_name":"Python","time":"3 months, 1 week","timestamp":1695306439,"status":10,"status_display":"Accepted","runtime":"8778 ms","url":"/submissions/detail/1055476390/","is_pending":"Not Pending","title":"Group Anagrams","memory":"16.3 MB","code":"class Solution(object):\n    def groupAnagrams(self, strs):\n        \"\"\"\n        :type strs: List[str]\n        :rtype: List[List[str]]\n        \"\"\"\n        out = []\n        \n        for s in strs:\n            found = False\n            for l in out:\n                if len(l[0]) == len(s) and self.isAnagram(l[0], s):\n                    l.append(s)\n                    found = True\n            if not found:\n                out.append([s])\n\n                \n        return out\n\n                \n\n    def isAnagram(self, str1, str2):\n        letters = {}\n        \n        for c in str1:\n            if not letters.has_key(c):\n                letters[c] = 1\n            else:\n                letters[c]+=1\n        for c in str2:\n            if not letters.has_key(c):\n                return False\n            else:\n                letters[c]-=1\n\n        for k in letters:\n            if letters[k] != 0:\n                return False\n        return True","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}