{"id":1059059417,"lang":"python","lang_name":"Python","time":"3Â months","timestamp":1695669192,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/1059059417/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"13.3 MB","code":"class Solution(object):\n    def search(self, nums, target, off=0):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: int\n        \"\"\"\n        if len(nums) == 1:\n            if nums[0] == target:\n                return off\n            return -1\n        elif len(nums) == 2:\n            if nums[1] == target:\n                return off+1\n            elif nums[0] == target:\n                return off\n            return -1\n        elif len(nums) == 0:\n            return -1\n\n        left,mid,right = 0,len(nums)//2,len(nums)-1\n\n        if target == nums[left]:\n            return left+off\n        elif target == nums[right]:\n            return right+off\n        elif target == nums[mid]:\n            return mid+off\n\n        if nums[left] < target < nums[mid]:\n            return self.search(nums[left+1:mid], target, off+left+1)\n        elif nums[mid] < target < nums[right]:\n            return self.search(nums[mid+1:right], target, off+mid+1)\n\n        if nums[right] < nums[mid]:\n            return self.search(nums[mid+1:right], target, off+mid+1)\n        elif nums[left] > nums[mid]:\n            return self.search(nums[left+1:mid], target, off+left+1)\n\n        return -1","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array","has_notes":false,"flag_type":1}