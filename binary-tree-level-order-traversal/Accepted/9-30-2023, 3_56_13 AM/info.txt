{"id":1062906092,"lang":"python","lang_name":"Python","time":"3Â months","timestamp":1696064173,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/1062906092/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"15.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution(object):\n    def levelOrder(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: List[List[int]]\n        \"\"\"\n\n        if root == None:\n            return []\n\n        left_list = self.levelOrder(root.left)\n        right_list = self.levelOrder(root.right)\n\n        this_list = []\n        this_list.append([root.val])\n\n        if(len(left_list) > len(right_list)):\n            for i in range(len(right_list)):\n                left_list[i] = left_list[i]+right_list[i]\n            this_list.extend(left_list)\n        elif(len(left_list) <= len(right_list)):\n            for i in range(len(left_list)):\n                right_list[i] = left_list[i]+right_list[i]\n            this_list.extend(right_list)\n        \n        return this_list","compare_result":"11111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}